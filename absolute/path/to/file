<template>
  <view class="user-bank-view">
    <!-- 题库信息卡片 -->
    <view class="bank-info-card">
      <view class="bank-header">
        <text class="bank-title">计算机基础知识题库</text>
        <text class="question-count">共256题</text>
      </view>
      
      <view class="bank-details">
        <view class="detail-item">
          <uni-icons type="calendar" size="16" color="#999"></uni-icons>
          <text class="detail-text">创建于 2024-06-15</text>
        </view>
        <view class="detail-item">
          <uni-icons type="person" size="16" color="#999"></uni-icons>
          <text class="detail-text">创建者 张老师</text>
        </view>
      </view>
    </view>
    
    <!-- 题目列表 -->
    <view class="questions-section">
      <view class="section-title">
        <uni-icons type="list" size="18" color="#333"></uni-icons>
        <text class="title-text">题目列表</text>
      </view>
      
      <view class="questions-list">
        <!-- 单选题示例 -->
        <view class="question-item">
          <view class="question-header">
            <view class="question-type select">单选</view>
            <text class="question-content">下列哪个不是JavaScript的基本数据类型？</text>
          </view>
          <view class="question-meta">
            <text class="meta-item">难度：中等</text>
            <text class="meta-item">标签：编程基础</text>
          </view>
        </view>
        
        <!-- 判断题示例 -->
        <view class="question-item">
          <view class="question-header">
            <view class="question-type judge">判断</view>
            <text class="question-content">CSS是用于网页结构设计的语言。</text>
          </view>
          <view class="question-meta">
            <text class="meta-item">难度：简单</text>
            <text class="meta-item">标签：前端基础</text>
          </view>
        </view>
        
        <!-- 填空题示例 -->
        <view class="question-item">
          <view class="question-header">
            <view class="question-type blank">填空</view>
            <text class="question-content">HTML的全称是______。</text>
          </view>
          <view class="question-meta">
            <text class="meta-item">难度：简单</text>
            <text class="meta-item">标签：前端基础</text>
          </view>
        </view>
        
        <!-- 简答题示例 -->
        <view class="question-item">
          <view class="question-header">
            <view class="question-type short">简答</view>
            <text class="question-content">请简述Vue.js的响应式原理。</text>
          </view>
          <view class="question-meta">
            <text class="meta-item">难度：困难</text>
            <text class="meta-item">标签：前端框架</text>
          </view>
        </view>
      </view>
    </view>
    
    <!-- 添加更多按钮 -->
    <view class="load-more-container">
      <button class="load-more-btn" @click="loadMore">
        <uni-icons type="arrowdown" size="16" color="#666"></uni-icons>
        <text class="btn-text">添加更多</text>
      </button>
    </view>
  </view>
</template>

<script setup>
import { onLoad } from '@dcloudio/uni-app';
import { ref, onMounted } from 'vue';

const bankId = ref('');

onLoad((option) => {
  if (option.bankId) {
    bankId.value = option.bankId;
  }
});

onMounted(() => {
  console.log('bankId', bankId.value);
});

// 加载更多题目（暂空）
const loadMore = () => {
  console.log('加载更多题目');
};
</script>

<style scoped>
.user-bank-view {
  padding: 20rpx;
  background-color: #f5f5f5;
  min-height: 100vh;
}

.bank-info-card {
  background-color: #fff;
  border-radius: 16rpx;
  padding: 30rpx;
  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.05);
  margin-bottom: 30rpx;
}

.bank-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20rpx;
}

.bank-title {
  font-size: 36rpx;
  font-weight: bold;
  color: #333;
}

.question-count {
  font-size: 28rpx;
  color: #666;
  background-color: #f0f0f0;
  padding: 8rpx 16rpx;
  border-radius: 20rpx;
}

.bank-details {
  display: flex;
  flex-direction: column;
  gap: 16rpx;
}

.detail-item {
  display: flex;
  align-items: center;
  gap: 10rpx;
}

.detail-text {
  font-size: 26rpx;
  color: #999;
}

.questions-section {
  background-color: #fff;
  border-radius: 16rpx;
  padding: 30rpx;
  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.05);
  margin-bottom: 30rpx;
}

.section-title {
  display: flex;
  align-items: center;
  gap: 12rpx;
  margin-bottom: 30rpx;
}

.title-text {
  font-size: 32rpx;
  font-weight: bold;
  color: #333;
}

.questions-list {
  display: flex;
  flex-direction: column;
  gap: 30rpx;
}

.question-item {
  border: 1rpx solid #eee;
  border-radius: 12rpx;
  padding: 24rpx;
  transition: all 0.3s;
}

.question-item:hover {
  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);
  transform: translateY(-2rpx);
}

.question-header {
  display: flex;
  align-items: flex-start;
  gap: 16rpx;
  margin-bottom: 16rpx;
}

.question-type {
  font-size: 24rpx;
  padding: 6rpx 12rpx;
  border-radius: 6rpx;
  font-weight: bold;
  flex-shrink: 0;
}

.select {
  background-color: #e3f2fd;
  color: #1976d2;
}

.judge {
  background-color: #f1f8e9;
  color: #689f38;
}

.blank {
  background-color: #fff3e0;
  color: #ef6c00;
}

.short {
  background-color: #fce4ec;
  color: #d81b60;
}

.question-content {
  font-size: 28rpx;
  color: #333;
  flex: 1;
}

.question-meta {
  display: flex;
  justify-content: space-between;
  font-size: 24rpx;
  color: #999;
}

.meta-item {
  background-color: #f8f8f8;
  padding: 6rpx 12rpx;
  border-radius: 6rpx;
}

.load-more-container {
  display: flex;
  justify-content: center;
  padding: 20rpx 0;
}

.load-more-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10rpx;
  background-color: #fff;
  border: 1rpx solid #ddd;
  border-radius: 50rpx;
  padding: 20rpx 40rpx;
  font-size: 28rpx;
  color: #666;
}

.load-more-btn::after {
  border: none;
}

.btn-text {
  color: #666;
}
</style>